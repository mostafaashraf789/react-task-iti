{"ast":null,"code":"var _jsxFileName = \"F:\\\\iti\\\\react\\\\Day03\\\\task\\\\movitask\\\\src\\\\view\\\\MovieList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport MovieController from '../controller/MovieController';\nimport MovieItems from './MovieItems';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction MovieList() {\n  _s();\n  const [data, setdata] = useState({\n    movies: [],\n    loading: true,\n    error: null\n  });\n  const fetchMovies = async () => {\n    try {\n      const movies = await MovieController.fetchMovie();\n      setdata({\n        movies: movies,\n        loading: false\n      });\n    } catch (error) {\n      setdata({\n        error: error.message,\n        loading: false\n      });\n    }\n  };\n  use;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: data.loading ? 'Loading...' : false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: data.error ? data.error.message : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this), data.movies.map(movie => /*#__PURE__*/_jsxDEV(MovieItems, {\n      movies: movie\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 34\n    }, this))]\n  }, void 0, true);\n}\n_s(MovieList, \"+SzY4RzzDxeq+zLdHSTUA1/pjLo=\");\n_c = MovieList;\nexport default MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["React","useState","MovieController","MovieItems","jsxDEV","_jsxDEV","Fragment","_Fragment","MovieList","_s","data","setdata","movies","loading","error","fetchMovies","fetchMovie","message","use","children","fileName","_jsxFileName","lineNumber","columnNumber","map","movie","_c","$RefreshReg$"],"sources":["F:/iti/react/Day03/task/movitask/src/view/MovieList.jsx"],"sourcesContent":["\r\nimport React, { useState } from 'react'\r\nimport MovieController from '../controller/MovieController'\r\nimport MovieItems from './MovieItems';\r\n\r\nfunction MovieList() {\r\n    \r\nconst [data, setdata] = useState({movies:[],loading:true,error:null})\r\n\r\nconst fetchMovies = async() => {\r\ntry{\r\n const movies =   await MovieController.fetchMovie()\r\n    setdata({movies:movies,loading:false})\r\n\r\n}\r\n    catch(error){\r\n        setdata({error:error.message,loading:false})\r\n    }\r\n }\r\nuse\r\n  return (\r\n    <>\r\n    <p>{data.loading?'Loading...':false}</p>\r\n    <p>{data.error?data.error.message:null}</p>\r\n    {data.movies.map((movie) =>  <MovieItems movies={movie}/> )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MovieList"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,eAAe,MAAM,+BAA+B;AAC3D,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEtC,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAErB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC;IAACW,MAAM,EAAC,EAAE;IAACC,OAAO,EAAC,IAAI;IAACC,KAAK,EAAC;EAAI,CAAC,CAAC;EAErE,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAW;IAC/B,IAAG;MACF,MAAMH,MAAM,GAAK,MAAMV,eAAe,CAACc,UAAU,CAAC,CAAC;MAChDL,OAAO,CAAC;QAACC,MAAM,EAACA,MAAM;QAACC,OAAO,EAAC;MAAK,CAAC,CAAC;IAE1C,CAAC,CACG,OAAMC,KAAK,EAAC;MACRH,OAAO,CAAC;QAACG,KAAK,EAACA,KAAK,CAACG,OAAO;QAACJ,OAAO,EAAC;MAAK,CAAC,CAAC;IAChD;EACH,CAAC;EACFK,GAAG;EACD,oBACEb,OAAA,CAAAE,SAAA;IAAAY,QAAA,gBACAd,OAAA;MAAAc,QAAA,EAAIT,IAAI,CAACG,OAAO,GAAC,YAAY,GAAC;IAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxClB,OAAA;MAAAc,QAAA,EAAIT,IAAI,CAACI,KAAK,GAACJ,IAAI,CAACI,KAAK,CAACG,OAAO,GAAC;IAAI;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC1Cb,IAAI,CAACE,MAAM,CAACY,GAAG,CAAEC,KAAK,iBAAMpB,OAAA,CAACF,UAAU;MAACS,MAAM,EAAEa;IAAM;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAE,CAAC;EAAA,eACzD,CAAC;AAEP;AAACd,EAAA,CAtBQD,SAAS;AAAAkB,EAAA,GAATlB,SAAS;AAwBlB,eAAeA,SAAS;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}