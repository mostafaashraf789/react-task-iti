{"ast":null,"code":"var _jsxFileName = \"F:\\\\iti\\\\react\\\\Day03\\\\task\\\\movitask\\\\src\\\\view\\\\MovieList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport MovieController from '../controller/MovieController';\nimport MovieItems from './MovieItems';\nimport Header from './Header';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction MovieList() {\n  _s();\n  const [data, setdata] = useState({\n    movies: [],\n    loading: true,\n    error: null\n  });\n  const fetchMovies = async () => {\n    try {\n      const movies = await MovieController.fetchMovie();\n      setdata({\n        movies: movies,\n        loading: false\n      });\n    } catch (error) {\n      setdata({\n        error: error.message,\n        loading: false\n      });\n    }\n  };\n  useEffect(() => {\n    setTimeout(() => {\n      fetchMovies();\n    }, 3000);\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: data.loading ? 'Loading...' : false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: data.error ? data.error.message : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display\n        },\n        children: data.movies.map(movie => /*#__PURE__*/_jsxDEV(MovieItems, {\n          movies: movie\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 39\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n}\n_s(MovieList, \"mawI5Y9ZeZU2jkN84YCD/b8/UpM=\");\n_c = MovieList;\nexport default MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["React","useEffect","useState","MovieController","MovieItems","Header","jsxDEV","_jsxDEV","Fragment","_Fragment","MovieList","_s","data","setdata","movies","loading","error","fetchMovies","fetchMovie","message","setTimeout","children","className","fileName","_jsxFileName","lineNumber","columnNumber","style","display","map","movie","_c","$RefreshReg$"],"sources":["F:/iti/react/Day03/task/movitask/src/view/MovieList.jsx"],"sourcesContent":["\r\nimport React, { useEffect, useState } from 'react'\r\nimport MovieController from '../controller/MovieController'\r\nimport MovieItems from './MovieItems';\r\nimport Header from './Header';\r\n\r\nfunction MovieList() {\r\n    \r\nconst [data, setdata] = useState({movies:[],loading:true,error:null})\r\n\r\nconst fetchMovies = async() => {\r\ntry{\r\n const movies =   await MovieController.fetchMovie()\r\n    setdata({movies:movies,loading:false})\r\n\r\n}\r\n    catch(error){\r\n        setdata({error:error.message,loading:false})\r\n    }\r\n }\r\nuseEffect(() => { \r\n    setTimeout(() => {\r\n        fetchMovies()\r\n    }, 3000);\r\n },[data])\r\n \r\n\r\nreturn (\r\n    <>\r\n   <div className='container'>\r\n     <Header/>\r\n     <p>{data.loading?'Loading...':false}</p>\r\n     <p>{data.error?data.error.message:null}</p>\r\n    <div style={{display}}>\r\n         {data.movies.map((movie) =>  <MovieItems movies={movie}/> )}\r\n    </div>\r\n   </div>\r\n   </>\r\n\r\n  )\r\n}\r\n\r\nexport default MovieList"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,eAAe,MAAM,+BAA+B;AAC3D,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE9B,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAErB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC;IAACY,MAAM,EAAC,EAAE;IAACC,OAAO,EAAC,IAAI;IAACC,KAAK,EAAC;EAAI,CAAC,CAAC;EAErE,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAW;IAC/B,IAAG;MACF,MAAMH,MAAM,GAAK,MAAMX,eAAe,CAACe,UAAU,CAAC,CAAC;MAChDL,OAAO,CAAC;QAACC,MAAM,EAACA,MAAM;QAACC,OAAO,EAAC;MAAK,CAAC,CAAC;IAE1C,CAAC,CACG,OAAMC,KAAK,EAAC;MACRH,OAAO,CAAC;QAACG,KAAK,EAACA,KAAK,CAACG,OAAO;QAACJ,OAAO,EAAC;MAAK,CAAC,CAAC;IAChD;EACH,CAAC;EACFd,SAAS,CAAC,MAAM;IACZmB,UAAU,CAAC,MAAM;MACbH,WAAW,CAAC,CAAC;IACjB,CAAC,EAAE,IAAI,CAAC;EACX,CAAC,EAAC,CAACL,IAAI,CAAC,CAAC;EAGV,oBACIL,OAAA,CAAAE,SAAA;IAAAY,QAAA,eACDd,OAAA;MAAKe,SAAS,EAAC,WAAW;MAAAD,QAAA,gBACxBd,OAAA,CAACF,MAAM;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACTnB,OAAA;QAAAc,QAAA,EAAIT,IAAI,CAACG,OAAO,GAAC,YAAY,GAAC;MAAK;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxCnB,OAAA;QAAAc,QAAA,EAAIT,IAAI,CAACI,KAAK,GAACJ,IAAI,CAACI,KAAK,CAACG,OAAO,GAAC;MAAI;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5CnB,OAAA;QAAKoB,KAAK,EAAE;UAACC;QAAO,CAAE;QAAAP,QAAA,EAChBT,IAAI,CAACE,MAAM,CAACe,GAAG,CAAEC,KAAK,iBAAMvB,OAAA,CAACH,UAAU;UAACU,MAAM,EAAEgB;QAAM;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC,gBACJ,CAAC;AAGN;AAACf,EAAA,CAlCQD,SAAS;AAAAqB,EAAA,GAATrB,SAAS;AAoClB,eAAeA,SAAS;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}